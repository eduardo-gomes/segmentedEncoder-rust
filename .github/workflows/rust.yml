name: Rust
run-name: Build and test @${{ github.sha }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/cargo
    - uses: ./.github/actions/protoc
    - uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "21"
    - name: Cache build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-build-debug-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-build-debug
    - name: Build
      run: cargo +nightly build --tests --verbose
    - name: Run tests
      run: cargo +nightly test -- --format=json -Z unstable-options --report-time | junitify -r --out ./tests/
    - name: JUnit Report Action
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: ./tests/*.xml
        check_name: ${{ runner.os }} Test Report



  build-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/cargo
    - uses: ./.github/actions/protoc
    - uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "21"
    - name: Cache build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-build-optimized-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-build-optimized
    - name: Build
      run: cargo +nightly build --profile=release-lto --bins -Z unstable-options --out-dir binaries --verbose
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build_optimized-${{ runner.os }}
        path: binaries
        retention-days: 30
