/* tslint:disable */
/* eslint-disable */
/**
 * SegmentedEncoder rest api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnalysisTask } from './AnalysisTask';
import {
    AnalysisTaskFromJSON,
    AnalysisTaskFromJSONTyped,
    AnalysisTaskToJSON,
} from './AnalysisTask';
import type { MergeTask } from './MergeTask';
import {
    MergeTaskFromJSON,
    MergeTaskFromJSONTyped,
    MergeTaskToJSON,
} from './MergeTask';
import type { TranscodeTask } from './TranscodeTask';
import {
    TranscodeTaskFromJSON,
    TranscodeTaskFromJSONTyped,
    TranscodeTaskToJSON,
} from './TranscodeTask';

/**
 * 
 * @export
 * @interface Recipe
 */
export interface Recipe {
    /**
     * 
     * @type {AnalysisTask}
     * @memberof Recipe
     */
    analysis?: AnalysisTask;
    /**
     * 
     * @type {TranscodeTask}
     * @memberof Recipe
     */
    transcode?: TranscodeTask;
    /**
     * 
     * @type {MergeTask}
     * @memberof Recipe
     */
    merge?: MergeTask;
}

/**
 * Check if a given object implements the Recipe interface.
 */
export function instanceOfRecipe(value: object): boolean {
    return true;
}

export function RecipeFromJSON(json: any): Recipe {
    return RecipeFromJSONTyped(json, false);
}

export function RecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Recipe {
    if (json == null) {
        return json;
    }
    return {
        
        'analysis': json['analysis'] == null ? undefined : AnalysisTaskFromJSON(json['analysis']),
        'transcode': json['transcode'] == null ? undefined : TranscodeTaskFromJSON(json['transcode']),
        'merge': json['merge'] == null ? undefined : MergeTaskFromJSON(json['merge']),
    };
}

export function RecipeToJSON(value?: Recipe | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'analysis': AnalysisTaskToJSON(value['analysis']),
        'transcode': TranscodeTaskToJSON(value['transcode']),
        'merge': MergeTaskToJSON(value['merge']),
    };
}

